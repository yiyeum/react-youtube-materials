{"version":3,"sources":["containers/Form/Form.tsx","containers/Home/Home.tsx","constants/index.ts","containers/Stopwatch/Stopwatch.tsx","components/Context/Box1.tsx","components/Context/Box2.tsx","components/Context/Box4.tsx","components/Context/Box3.tsx","components/TaskList/TaskList.tsx","components/TaskList/TaskItem.tsx","containers/Context/Context.tsx","containers/Todo/Todo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Form","withStyles","root","border","props","classes","useState","fullName","age","form","setForm","handleForm","e","target","name","value","Box","m","className","Typography","variant","TextField","label","onChange","fullWidth","type","p","mb","Home","link","backgroundColor","color","lineHeight","textDecoration","fontSize","borderRadius","to","Stopwatch","width","margin","time","setTime","start","setStart","useEffect","timeId","setInterval","prevTime","clearInterval","Button","Grid","container","justify","item","xs","sm","md","style","textAlign","toFixed","onClick","Box1","padding","Box2","userData","useContext","UserContext","userName","Box3","Box4","setUserName","TaskList","taskData","TaskContext","state","list","length","map","key","id","TaskItem","tag","IconButton","size","aria-label","dispatch","createContext","Context","Provider","initialState","reducer","action","filter","Todo","useReducer","formattedList","trim","formattedTag","uid","App","basename","process","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e076d904.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Box, TextField, Typography, withStyles, WithStyles } from '@material-ui/core'\n\nconst styles = {\n    root: {\n        border: '3px dashed tomato'\n    }\n}\n\nconst FormBase = (props: WithStyles<typeof styles>) => {\n    const { classes } = props\n    const [form, setForm] = useState({ fullName: '', age: 0 })\n\n    const handleForm = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setForm({ ...form, [e.target.name]: e.target.value })\n    }\n\n    return (\n        <>\n            <Box m={5} className={classes.root}>\n                <Box m={5}>\n                    <Typography variant='h6'>Please fill the form</Typography>\n                </Box>\n                <Box m={5}>\n                    <TextField label='Full Name' value={form.fullName} name='fullName' onChange={handleForm} fullWidth />\n                </Box>\n                <Box m={5}>\n                    <TextField type='number' label='Age' value={form.age} name='age' onChange={handleForm} fullWidth />\n                </Box>\n            </Box>\n\n            <Box m={5} p={5} className={classes.root}>\n                <Box mb={3}>\n                    <Typography variant='h6'>Form state</Typography>\n                </Box>\n                <Typography>Full name: {form.fullName}</Typography>\n                <Typography>Age: {form.age}</Typography>\n            </Box>\n        </>\n    )\n}\n\nexport const Form = withStyles(styles)(FormBase)","import React from 'react'\nimport { Typography, Box, WithStyles, withStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport {\n    FORM_URL, STOPWATCH_URL, CONTEXT_URL, REDUCER_URL,\n    TITLE_FORM, TITLE_STOPWATCH, TITLE_CONTEXT, TITLE_REDUCER\n} from '../../constants'\n\nconst styles = {\n    link: {\n        backgroundColor: '#212121',\n        color: '#ffffff',\n        lineHeight: '1.4',\n        textDecoration: 'none',\n        fontSize: 20,\n        borderRadius: '2px',\n        '&:hover': {\n            backgroundColor: '#424141'\n        }\n    }\n}\n\nconst HomeBase = (props: WithStyles<typeof styles>) => {\n    const { classes } = props\n\n    return (\n        <Box p={6}>\n            <Typography variant='h4'>React Materials</Typography>\n            <ul>\n                <li>\n                    <Link className={classes.link} to={FORM_URL}>{TITLE_FORM}</Link>\n                </li>\n                <li>\n                    <Link className={classes.link} to={STOPWATCH_URL}>{TITLE_STOPWATCH}</Link>\n                </li>\n                <li>\n                    <Link className={classes.link} to={CONTEXT_URL}>{TITLE_CONTEXT}</Link>\n                </li>\n                <li>\n                    <Link className={classes.link} to={REDUCER_URL}>{TITLE_REDUCER}</Link>\n                </li>\n            </ul>\n        </Box>\n    );\n}\n\nexport const Home = withStyles(styles)(HomeBase)\n","// URL\nexport const DEFAULT_URL = '/'\nexport const FORM_URL = '/form'\nexport const STOPWATCH_URL = '/stopwatch'\nexport const CONTEXT_URL = '/context'\nexport const REDUCER_URL = '/reducer'\n\n// General\nexport const TITLE_FORM = 'Form - useState'\nexport const TITLE_STOPWATCH = 'Stopwatch - useEffect'\nexport const TITLE_CONTEXT = 'Boxes - useContext'\nexport const TITLE_REDUCER = 'Task - useReducer'\nexport const TYPE_SAVE = 'save'\nexport const TYPE_DELETE = 'delete'\n","import React, { useEffect, useState } from 'react'\nimport { Box, withStyles, WithStyles, Button, Grid, Typography } from '@material-ui/core'\nimport { DEFAULT_URL } from '../../constants'\nimport { Link } from 'react-router-dom'\n\nconst styles = {\n    root: {\n        width: '200px',\n        border: '3px dashed #ffd5ce',\n        margin: '0 auto'\n    },\n\n}\n\nconst StopwatchBase = (props: WithStyles<typeof styles>) => {\n    const { classes } = props\n    const [time, setTime] = useState(0)\n    const [start, setStart] = useState(false)\n\n    useEffect(() => {\n        if (start) {\n            let timeId = setInterval(() => { setTime(prevTime => prevTime + 0.1) }, 100)\n            return () => clearInterval(timeId)\n        }\n    }, [start])\n\n    return (\n        <>\n            <Box m={1}>\n                <Link to={DEFAULT_URL}><Button>Back to Home</Button></Link>\n            </Box>\n            <Box m={5} className={classes.root}>\n                <Grid container justify='center'>\n                    <Grid item xs={12} sm={12} md={12}><Typography variant='h3' style={{ textAlign: 'center' }}>{time.toFixed(1)}</Typography></Grid>\n                    <Grid item>\n                        {\n                            start ?\n                                <Button onClick={() => setStart(false)}>Pause</Button>\n                                :\n                                <Button onClick={() => setStart(true)}>Start</Button>\n                        }\n                        <Button onClick={() => { setTime(0); setStart(false) }}>Stop</Button>\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    )\n}\n\nexport const Stopwatch = withStyles(styles)(StopwatchBase)","import React from 'react'\nimport { Box, withStyles, WithStyles, Typography } from '@material-ui/core'\nimport { Box2 } from '../'\n\nconst styles = {\n    root: {\n        border: '2px solid #b9b9b9',\n        width: 600,\n        padding: 30\n    }\n}\n\nconst Box1Base = (props: WithStyles<typeof styles>) => {\n    const { classes } = props\n\n    return (\n        <Box className={classes.root}>\n            <Typography variant='body1' color='primary'>Box1</Typography>\n            <Box2 />\n        </Box>\n    )\n}\n\nexport const Box1 = withStyles(styles)(Box1Base)","import React, { useContext } from 'react'\nimport { Box, withStyles, WithStyles, Typography } from '@material-ui/core'\nimport { Box3 } from '../'\nimport { UserContext } from '../../containers'\n\nconst styles = {\n    root: {\n        border: '2px solid #b9b9b9',\n        width: 300,\n        margin: '0 auto',\n        padding: 30\n    }\n}\n\nconst Box2Base = (props: WithStyles<typeof styles>) => {\n    const { classes } = props\n    const userData = useContext(UserContext)\n\n    return (\n        <Box className={classes.root}>\n            <Typography variant='body1' color='primary'>Box2</Typography>\n            <Typography variant='body2' color='textPrimary'>{userData.userName}</Typography>\n            <Box3 />\n        </Box>\n    )\n}\n\nexport const Box2 = withStyles(styles)(Box2Base)","import React, { useContext } from 'react'\nimport { Box, withStyles, WithStyles, Typography } from '@material-ui/core'\nimport { UserContext } from '../../containers'\n\nconst styles = {\n    root: {\n        border: '2px solid #b9b9b9',\n        width: 70,\n        margin: '0 auto',\n        padding: 5,\n    }\n}\n\nconst Box4Base = (props: WithStyles<typeof styles>) => {\n    const { classes } = props\n    const userData = useContext(UserContext)\n\n    return (\n        <Box className={classes.root}>\n            <Typography variant='body1' color='primary'>Box4</Typography>\n            <Typography variant='body2' color='textPrimary'>{userData.userName}</Typography>\n        </Box>\n    )\n}\n\nexport const Box4 = withStyles(styles)(Box4Base)","import React, { useContext } from 'react'\nimport { Box, withStyles, WithStyles, Typography } from '@material-ui/core'\nimport { UserContext } from '../../containers'\nimport { Box4 } from './Box4'\n\nconst styles = {\n    root: {\n        border: '2px solid #b9b9b9',\n        width: 150,\n        margin: '0 auto',\n        padding: 15\n    }\n}\n\nconst Box3Base = (props: WithStyles<typeof styles>) => {\n    const { classes } = props\n    const userData = useContext(UserContext)\n\n    return (\n        <Box className={classes.root}>\n            <Typography variant='body1' color='primary'>Box3</Typography>\n            <Typography variant='body2' color='textPrimary'>{userData.userName}</Typography>\n            <Box mb={2}>\n                <button onClick={() => userData.setUserName('King')}>click</button>\n            </Box>\n            <Box4 />\n        </Box>\n    )\n}\n\nexport const Box3 = withStyles(styles)(Box3Base)","import React, { useContext } from 'react'\nimport { Box } from '@material-ui/core'\nimport { TaskContext } from '../../containers'\nimport { ITask, ITaskData } from '../../models'\nimport { TaskItem } from './'\n\nexport const TaskList = () => {\n    const taskData: ITaskData = useContext(TaskContext)\n\n    return (\n        <Box m={5}>\n            {\n                taskData.state.list.length > 0 &&\n                taskData.state.list.map((item: ITask) => (\n                    <TaskItem key={item.id} item={item} />\n                ))\n            }\n        </Box>\n    )\n}\n\n","import React, { useContext } from 'react'\nimport { IconButton, Typography, Grid } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { TaskContext } from '../../containers'\nimport { ITask, ITaskData } from '../../models'\n\ninterface IProps {\n    item: ITask\n}\n\nexport const TaskItem = ({ item }: IProps) => {\n    const taskData: ITaskData = useContext(TaskContext)\n\n    return (\n        <Grid container>\n            <Grid item md={3}>\n                <Typography variant='body1' color='textPrimary'>{item.name}</Typography>\n            </Grid>\n            <Grid item md={2}>\n                <Typography variant='body1' color='textSecondary'>{item.tag}</Typography>\n            </Grid>\n            <Grid item md={2}>\n                <IconButton\n                    size=\"small\"\n                    aria-label=\"delete\"\n                    onClick={() => taskData.dispatch({ type: 'delete', id: item.id })}\n                >\n                    <DeleteIcon />\n                </IconButton>\n            </Grid>\n        </Grid>\n    )\n}\n\n","import React, { createContext, useState } from 'react'\nimport { Box, Button } from '@material-ui/core'\nimport { DEFAULT_URL } from '../../constants'\nimport { Link } from 'react-router-dom'\nimport { Box1 } from '../../components'\n\ninterface IUserData {\n    userName: string\n    setUserName: React.Dispatch<React.SetStateAction<string>>\n}\n\nconst userData: IUserData = {\n    userName: '',\n    setUserName: () => { }\n}\n\nexport const UserContext = createContext(userData)\n\nexport const Context = () => {\n    const [userName, setUserName] = useState('Andrew')\n\n    return (\n        <UserContext.Provider value={{ userName, setUserName }}>\n            <Box m={1}>\n                <Link to={DEFAULT_URL}><Button>Back to Home</Button></Link>\n            </Box>\n            <Box m={5}>\n                <Box1 />\n            </Box>\n        </UserContext.Provider>\n    )\n}\n","import React, { useReducer, useState, createContext } from 'react'\nimport { Box, Button, TextField, Grid } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { uid } from 'react-uid'\nimport { DEFAULT_URL, TYPE_SAVE, TYPE_DELETE } from '../../constants'\nimport { TaskList } from '../../components'\nimport { IListState, ITaskData } from '../../models'\n\ntype ActionType =\n    | { type: 'save'; id: string; list: string; tag: string; }\n    | { type: 'delete'; id: string }\n\nconst initialState: IListState = {\n    list: []\n}\n\nconst taskData: ITaskData = {\n    state: initialState,\n    dispatch: () => null\n}\n\nconst reducer = (state: IListState, action: ActionType): IListState => {\n    switch (action.type) {\n        case TYPE_SAVE:\n            return { list: [...state.list, { id: action.id, name: action.list, tag: action.tag }] }\n        case TYPE_DELETE:\n            return { list: [...state.list.filter(item => item.id !== action.id)] }\n    }\n}\n\nexport const TaskContext: React.Context<ITaskData> = createContext<ITaskData>(taskData)\n\nexport const Todo = () => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const [form, setForm] = useState({ item: '', tag: '' })\n\n    const saveForm = (): void => {\n        const formattedList: string = form.item.trim()\n        const formattedTag: string = form.tag.trim()\n\n        if (formattedList.length > 0 && formattedTag.length > 0) {\n            dispatch({ type: 'save', id: uid(form), list: form.item, tag: form.tag })\n            setForm({ item: '', tag: '' })\n        }\n    }\n\n    return (\n        <TaskContext.Provider value={{ state, dispatch }} >\n            <Box m={1}>\n                <Link to={DEFAULT_URL}><Button>Back to Home</Button></Link>\n            </Box>\n            <Box m={5}>\n                <Grid container>\n                    <Grid item md={2}>\n                        <TextField label='Task' value={form.item} onChange={(e: React.ChangeEvent<HTMLInputElement>) => { setForm({ ...form, 'item': e.target.value }) }} />\n                    </Grid>\n                    <Grid item md={5}>\n                        <TextField label='Tag' value={form.tag} onChange={(e: React.ChangeEvent<HTMLInputElement>) => { setForm({ ...form, 'tag': e.target.value }) }} />\n                    </Grid>\n                </Grid>\n            </Box>\n            <Box m={5}>\n                <Button\n                    variant='contained'\n                    size='small'\n                    color='primary'\n                    onClick={saveForm}\n                >\n                    Save\n                </Button>\n            </Box>\n            <TaskList />\n        </TaskContext.Provider >\n    )\n}\n","import React from 'react'\nimport { BrowserRouter as Switch, Route, HashRouter } from 'react-router-dom'\nimport { Form, Home, Stopwatch, Context, Todo } from './containers'\nimport { DEFAULT_URL, FORM_URL, STOPWATCH_URL, CONTEXT_URL, REDUCER_URL } from './constants';\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path={DEFAULT_URL} exact><Home /></Route>\n        <Route path={FORM_URL} exact><Form /></Route>\n        <Route path={STOPWATCH_URL} exact><Stopwatch /></Route>\n        <Route path={CONTEXT_URL} exact><Context /></Route>\n        <Route path={REDUCER_URL} exact><Todo /></Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}